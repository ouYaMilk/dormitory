<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DormitoryRepairforMapper">
    
    <resultMap type="DormitoryRepairfor" id="DormitoryRepairforResult">
        <result property="repairFid"    column="repair_Fid"    />
        <result property="repairId"    column="repair_id"    />
        <result property="dormitoryBuilding"    column="dormitory_building"    />
        <result property="dormitoryId"    column="dormitory_id"    />
        <result property="stuName"    column="stu_name"    />
        <result property="repairerName"    column="repairer_name"    />
        <result property="repairStartTime"    column="repair_start_time"    />
        <result property="repairFinishTime"    column="repair_finish_time"    />
        <result property="repairContent"    column="repair_content"    />
        <result property="repairPicture"    column="repair_picture"    />
        <result property="repairCost"    column="repair_cost"    />
        <result property="acceptTime"    column="accept_time"    />
        <result property="finishPicture" column="finish_picture" />
    </resultMap>

    <sql id="selectDormitoryRepairforVo">
        select repair_Fid, repair_id, dormitory_building, dormitory_id, stu_name, repairer_name, repair_start_time, repair_finish_time, repair_content,repair_picture, repair_cost,finish_picture from dormitory_repairfor
    </sql>

    <select id="selectDormitoryRepairforList" parameterType="DormitoryRepairfor" resultMap="DormitoryRepairforResult">
        <include refid="selectDormitoryRepairforVo"/>
        <where>  
            <if test="repairFid != null "> and repair_Fid = #{repairFid}</if>
            <if test="repairId != null "> and repair_id = #{repairId}</if>
            <if test="dormitoryBuilding != null  and dormitoryBuilding != ''"> and dormitory_building = #{dormitoryBuilding}</if>
            <if test="dormitoryId != null  and dormitoryId != ''"> and dormitory_id like concat('%', #{dormitoryId},'%')</if>
            <if test="stuName != null  and stuName != ''"> and stu_name like concat('%', #{stuName}, '%')</if>
            <if test="repairerName != null  and repairerName != ''"> and repairer_name like concat('%', #{repairerName}, '%')</if>
            <if test="repairStartTime != null "> DATE_FORMAT(repair_start_time, '%Y-%m-%d') = DATE_FORMAT(#{repairStartTime},'%Y-%m-%d')</if>
            <if test="repairFinishTime != null "> DATE_FORMAT(repair_finish_time, '%Y-%m-%d') = DATE_FORMAT(#{repairFinishTime},'%Y-%m-%d')</if>
            <if test="repairContent != null  and repairContent != ''"> and repair_content like concat('%', #{repairContent}, '%')</if>
            <if test="repairCost != null  and repairCost != ''"> and repair_cost = #{repairCost}</if>
            <if test="finishPicture != null  and finishPicture  != ''"> and finish_picture = #{finishPicture }</if>
        </where>
    </select>
    
    <select id="selectDormitoryRepairforByRepairFid" parameterType="Long" resultMap="DormitoryRepairforResult">
        <include refid="selectDormitoryRepairforVo"/>
        where repair_Fid = #{repairFid}
    </select>
        
    <insert id="insertDormitoryRepairfor" parameterType="DormitoryRepairAccept" useGeneratedKeys="true" keyProperty="repairFid">
        insert into dormitory_repairfor
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="repairId != null">repair_id,</if>
            <if test="dormitoryBuliding != null">dormitory_building,</if>
            <if test="dormitoryId != null">dormitory_id,</if>
            <if test="stuName != null">stu_name,</if>
            <if test="repairerName != null">repairer_name,</if>
            <if test="repairStartTime != null">repair_start_time,</if>
            repair_finish_time,
            <if test="repairContent != null">repair_content,</if>
            <if test="repairPicture != null">repair_picture,</if>
            <if test="finishPicture != null">finish_picture,</if>
            <if test="acceptTime != null">accept_time,</if>
            <if test="repairCost != null">repair_cost,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="repairId != null">#{repairId},</if>
            <if test="dormitoryBuliding != null">#{dormitoryBuliding},</if>
            <if test="dormitoryId != null">#{dormitoryId},</if>
            <if test="stuName != null">#{stuName},</if>
            <if test="repairerName != null">#{repairerName},</if>
            <if test="repairStartTime != null">#{repairStartTime},</if>
            NOW(),
            <if test="repairContent != null">#{repairContent},</if>
            <if test="repairPicture != null">#{repairPicture},</if>
            <if test="repairPicture != null">#{finishPicture},</if>
            <if test="acceptTime != null">#{acceptTime},</if>
            <if test="repairCost != null">#{repairCost},</if>
         </trim>
    </insert>

    <update id="updateDormitoryRepairfor" parameterType="DormitoryRepairfor">
        update dormitory_repairfor
        <trim prefix="SET" suffixOverrides=",">
            <if test="repairId != null">repair_id = #{repairId},</if>
            <if test="dormitoryBuilding != null">dormitory_building = #{dormitoryBuilding},</if>

            <if test="dormitoryId != null">dormitory_id = #{dormitoryId},</if>
            <if test="stuName != null">stu_name = #{stuName},</if>
            <if test="repairerName != null">repairer_name = #{repairerName},</if>
            <if test="repairStartTime != null">repair_start_time = #{repairStartTime},</if>
            <if test="repairFinishTime != null">repair_finish_time = #{repairFinishTime},</if>
            <if test="repairContent != null">repair_content = #{repairContent},</if>
            <if test="repairPicture != null">repair_picture = #{repairPicture},</if>
            <if test="repairCost != null">repair_cost = #{repairCost},</if>
        </trim>
        where repair_Fid = #{repairFid}
    </update>

    <delete id="deleteDormitoryRepairforByRepairFid" parameterType="Long">
        delete from dormitory_repairfor where repair_Fid = #{repairFid}
    </delete>

    <delete id="deleteDormitoryRepairforByRepairFids" parameterType="String">
        delete from dormitory_repairfor where repair_Fid in 
        <foreach item="repairFid" collection="array" open="(" separator="," close=")">
            #{repairFid}
        </foreach>
    </delete>
</mapper>